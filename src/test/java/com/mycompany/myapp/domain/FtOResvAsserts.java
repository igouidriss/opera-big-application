package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FtOResvAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFtOResvAllPropertiesEquals(FtOResv expected, FtOResv actual) {
        assertFtOResvAutoGeneratedPropertiesEquals(expected, actual);
        assertFtOResvAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFtOResvAllUpdatablePropertiesEquals(FtOResv expected, FtOResv actual) {
        assertFtOResvUpdatableFieldsEquals(expected, actual);
        assertFtOResvUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFtOResvAutoGeneratedPropertiesEquals(FtOResv expected, FtOResv actual) {
        assertThat(expected)
            .as("Verify FtOResv auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFtOResvUpdatableFieldsEquals(FtOResv expected, FtOResv actual) {
        assertThat(expected)
            .as("Verify FtOResv relevant properties")
            .satisfies(e -> assertThat(e.getNumLigne()).as("check numLigne").isEqualTo(actual.getNumLigne()))
            .satisfies(e -> assertThat(e.getResort()).as("check resort").isEqualTo(actual.getResort()))
            .satisfies(e -> assertThat(e.getResvNameId()).as("check resvNameId").isEqualTo(actual.getResvNameId()))
            .satisfies(e -> assertThat(e.getClientOId()).as("check clientOId").isEqualTo(actual.getClientOId()))
            .satisfies(e -> assertThat(e.getTypeChb()).as("check typeChb").isEqualTo(actual.getTypeChb()))
            .satisfies(e -> assertThat(e.getBusinessDate()).as("check businessDate").isEqualTo(actual.getBusinessDate()))
            .satisfies(e -> assertThat(e.getNumOrdre()).as("check numOrdre").isEqualTo(actual.getNumOrdre()))
            .satisfies(e -> assertThat(e.getConfirmationNo()).as("check confirmationNo").isEqualTo(actual.getConfirmationNo()))
            .satisfies(e -> assertThat(e.getClientMdmId()).as("check clientMdmId").isEqualTo(actual.getClientMdmId()))
            .satisfies(e -> assertThat(e.getNameId()).as("check nameId").isEqualTo(actual.getNameId()))
            .satisfies(e -> assertThat(e.getNameIdLigne()).as("check nameIdLigne").isEqualTo(actual.getNameIdLigne()))
            .satisfies(e -> assertThat(e.getContactId()).as("check contactId").isEqualTo(actual.getContactId()))
            .satisfies(e -> assertThat(e.getAgenceId()).as("check agenceId").isEqualTo(actual.getAgenceId()))
            .satisfies(e -> assertThat(e.getAgenceNom()).as("check agenceNom").isEqualTo(actual.getAgenceNom()))
            .satisfies(e -> assertThat(e.getSocieteId()).as("check societeId").isEqualTo(actual.getSocieteId()))
            .satisfies(e -> assertThat(e.getGroupeId()).as("check groupeId").isEqualTo(actual.getGroupeId()))
            .satisfies(e -> assertThat(e.getMembreId()).as("check membreId").isEqualTo(actual.getMembreId()))
            .satisfies(e -> assertThat(e.getSourceProfileId()).as("check sourceProfileId").isEqualTo(actual.getSourceProfileId()))
            .satisfies(e -> assertThat(e.getNumBloc()).as("check numBloc").isEqualTo(actual.getNumBloc()))
            .satisfies(e -> assertThat(e.getStatutResv()).as("check statutResv").isEqualTo(actual.getStatutResv()))
            .satisfies(e -> assertThat(e.getStatutVip()).as("check statutVip").isEqualTo(actual.getStatutVip()))
            .satisfies(e -> assertThat(e.getDateDebutLigne()).as("check dateDebutLigne").isEqualTo(actual.getDateDebutLigne()))
            .satisfies(e -> assertThat(e.getDateFinLigne()).as("check dateFinLigne").isEqualTo(actual.getDateFinLigne()))
            .satisfies(e -> assertThat(e.getDateFinOrigine()).as("check dateFinOrigine").isEqualTo(actual.getDateFinOrigine()))
            .satisfies(e -> assertThat(e.getDateAnn()).as("check dateAnn").isEqualTo(actual.getDateAnn()))
            .satisfies(e -> assertThat(e.getPseudoRoomYn()).as("check pseudoRoomYn").isEqualTo(actual.getPseudoRoomYn()))
            .satisfies(e -> assertThat(e.getComplementaireYn()).as("check complementaireYn").isEqualTo(actual.getComplementaireYn()))
            .satisfies(e -> assertThat(e.getInterneYn()).as("check interneYn").isEqualTo(actual.getInterneYn()))
            .satisfies(e -> assertThat(e.getWalkinYn()).as("check walkinYn").isEqualTo(actual.getWalkinYn()))
            .satisfies(e -> assertThat(e.getCreateurResv()).as("check createurResv").isEqualTo(actual.getCreateurResv()))
            .satisfies(e -> assertThat(e.getNomCreateurResv()).as("check nomCreateurResv").isEqualTo(actual.getNomCreateurResv()))
            .satisfies(e -> assertThat(e.getCodePays()).as("check codePays").isEqualTo(actual.getCodePays()))
            .satisfies(e -> assertThat(e.getLibPays()).as("check libPays").isEqualTo(actual.getLibPays()))
            .satisfies(e -> assertThat(e.getCodeNationalite()).as("check codeNationalite").isEqualTo(actual.getCodeNationalite()))
            .satisfies(e -> assertThat(e.getLibNationalite()).as("check libNationalite").isEqualTo(actual.getLibNationalite()))
            .satisfies(e -> assertThat(e.getCodeSource()).as("check codeSource").isEqualTo(actual.getCodeSource()))
            .satisfies(e -> assertThat(e.getLibSource()).as("check libSource").isEqualTo(actual.getLibSource()))
            .satisfies(e -> assertThat(e.getCodeGrandSource()).as("check codeGrandSource").isEqualTo(actual.getCodeGrandSource()))
            .satisfies(e -> assertThat(e.getCodeOrigine()).as("check codeOrigine").isEqualTo(actual.getCodeOrigine()))
            .satisfies(e -> assertThat(e.getLibOrigine()).as("check libOrigine").isEqualTo(actual.getLibOrigine()))
            .satisfies(e -> assertThat(e.getCodeMarche()).as("check codeMarche").isEqualTo(actual.getCodeMarche()))
            .satisfies(e -> assertThat(e.getLibMarche()).as("check libMarche").isEqualTo(actual.getLibMarche()))
            .satisfies(e -> assertThat(e.getCodeGrandMarche()).as("check codeGrandMarche").isEqualTo(actual.getCodeGrandMarche()))
            .satisfies(e -> assertThat(e.getLibGrandMarche()).as("check libGrandMarche").isEqualTo(actual.getLibGrandMarche()))
            .satisfies(e -> assertThat(e.getCodePrix()).as("check codePrix").isEqualTo(actual.getCodePrix()))
            .satisfies(e -> assertThat(e.getCategPrix()).as("check categPrix").isEqualTo(actual.getCategPrix()))
            .satisfies(e -> assertThat(e.getLibPrix()).as("check libPrix").isEqualTo(actual.getLibPrix()))
            .satisfies(e -> assertThat(e.getNumChb()).as("check numChb").isEqualTo(actual.getNumChb()))
            .satisfies(e -> assertThat(e.getTypeChbLigne()).as("check typeChbLigne").isEqualTo(actual.getTypeChbLigne()))
            .satisfies(e -> assertThat(e.getDescriptionTypeChb()).as("check descriptionTypeChb").isEqualTo(actual.getDescriptionTypeChb()))
            .satisfies(e -> assertThat(e.getCodeTypeChb()).as("check codeTypeChb").isEqualTo(actual.getCodeTypeChb()))
            .satisfies(e -> assertThat(e.getClassChb()).as("check classChb").isEqualTo(actual.getClassChb()))
            .satisfies(e -> assertThat(e.getStatutChbResv()).as("check statutChbResv").isEqualTo(actual.getStatutChbResv()))
            .satisfies(
                e -> assertThat(e.getTypeChbDeReservation()).as("check typeChbDeReservation").isEqualTo(actual.getTypeChbDeReservation())
            )
            .satisfies(
                e ->
                    assertThat(e.getDescriptionTypeChbDeResv())
                        .as("check descriptionTypeChbDeResv")
                        .isEqualTo(actual.getDescriptionTypeChbDeResv())
            )
            .satisfies(e -> assertThat(e.getCodeTypeChbDeResv()).as("check codeTypeChbDeResv").isEqualTo(actual.getCodeTypeChbDeResv()))
            .satisfies(
                e -> assertThat(e.getCircuitDistribution()).as("check circuitDistribution").isEqualTo(actual.getCircuitDistribution())
            )
            .satisfies(
                e ->
                    assertThat(e.getCircuitDistribUserRegroup())
                        .as("check circuitDistribUserRegroup")
                        .isEqualTo(actual.getCircuitDistribUserRegroup())
            )
            .satisfies(e -> assertThat(e.getNbResvAnn()).as("check nbResvAnn").isEqualTo(actual.getNbResvAnn()))
            .satisfies(e -> assertThat(e.getNbNuitee()).as("check nbNuitee").isEqualTo(actual.getNbNuitee()))
            .satisfies(e -> assertThat(e.getNbNuiteeNnDed()).as("check nbNuiteeNnDed").isEqualTo(actual.getNbNuiteeNnDed()))
            .satisfies(e -> assertThat(e.getNbNuiteeGlobal()).as("check nbNuiteeGlobal").isEqualTo(actual.getNbNuiteeGlobal()))
            .satisfies(
                e -> assertThat(e.getNbOccupationMultiple()).as("check nbOccupationMultiple").isEqualTo(actual.getNbOccupationMultiple())
            )
            .satisfies(e -> assertThat(e.getNbAduGlobal()).as("check nbAduGlobal").isEqualTo(actual.getNbAduGlobal()))
            .satisfies(e -> assertThat(e.getNbEnfGlobal()).as("check nbEnfGlobal").isEqualTo(actual.getNbEnfGlobal()))
            .satisfies(e -> assertThat(e.getNbPersDayUGlobal()).as("check nbPersDayUGlobal").isEqualTo(actual.getNbPersDayUGlobal()))
            .satisfies(e -> assertThat(e.getNbPersArrGlobal()).as("check nbPersArrGlobal").isEqualTo(actual.getNbPersArrGlobal()))
            .satisfies(e -> assertThat(e.getNbPersDepGlobal()).as("check nbPersDepGlobal").isEqualTo(actual.getNbPersDepGlobal()))
            .satisfies(e -> assertThat(e.getNbPersAnn()).as("check nbPersAnn").isEqualTo(actual.getNbPersAnn()))
            .satisfies(e -> assertThat(e.getNbPersNoshow()).as("check nbPersNoshow").isEqualTo(actual.getNbPersNoshow()))
            .satisfies(e -> assertThat(e.getNbChbDayUGlobal()).as("check nbChbDayUGlobal").isEqualTo(actual.getNbChbDayUGlobal()))
            .satisfies(e -> assertThat(e.getNbChbArrGlobal()).as("check nbChbArrGlobal").isEqualTo(actual.getNbChbArrGlobal()))
            .satisfies(e -> assertThat(e.getNbChbDepGlobal()).as("check nbChbDepGlobal").isEqualTo(actual.getNbChbDepGlobal()))
            .satisfies(e -> assertThat(e.getNbChbAnn()).as("check nbChbAnn").isEqualTo(actual.getNbChbAnn()))
            .satisfies(e -> assertThat(e.getNbChbNoshow()).as("check nbChbNoshow").isEqualTo(actual.getNbChbNoshow()))
            .satisfies(
                e ->
                    assertThat(e.getRevenuNetChambreGlobal())
                        .as("check revenuNetChambreGlobal")
                        .isEqualTo(actual.getRevenuNetChambreGlobal())
            )
            .satisfies(
                e ->
                    assertThat(e.getRevenuTaxeChambreGlobal())
                        .as("check revenuTaxeChambreGlobal")
                        .isEqualTo(actual.getRevenuTaxeChambreGlobal())
            )
            .satisfies(e -> assertThat(e.getRevenuNetBqGlobal()).as("check revenuNetBqGlobal").isEqualTo(actual.getRevenuNetBqGlobal()))
            .satisfies(e -> assertThat(e.getRevenuTaxeBqGlobal()).as("check revenuTaxeBqGlobal").isEqualTo(actual.getRevenuTaxeBqGlobal()))
            .satisfies(
                e -> assertThat(e.getRevenuNetExtraGlobal()).as("check revenuNetExtraGlobal").isEqualTo(actual.getRevenuNetExtraGlobal())
            )
            .satisfies(
                e -> assertThat(e.getRevenuTaxeExtraGlobal()).as("check revenuTaxeExtraGlobal").isEqualTo(actual.getRevenuTaxeExtraGlobal())
            )
            .satisfies(
                e -> assertThat(e.getRevenuNetTotalGlobal()).as("check revenuNetTotalGlobal").isEqualTo(actual.getRevenuNetTotalGlobal())
            )
            .satisfies(
                e -> assertThat(e.getRevenuTaxeTotalGlobal()).as("check revenuTaxeTotalGlobal").isEqualTo(actual.getRevenuTaxeTotalGlobal())
            )
            .satisfies(e -> assertThat(e.getProdRevenuChambre()).as("check prodRevenuChambre").isEqualTo(actual.getProdRevenuChambre()))
            .satisfies(e -> assertThat(e.getProdRevenuBq()).as("check prodRevenuBq").isEqualTo(actual.getProdRevenuBq()))
            .satisfies(e -> assertThat(e.getProdRevenuExtra()).as("check prodRevenuExtra").isEqualTo(actual.getProdRevenuExtra()))
            .satisfies(e -> assertThat(e.getProdRevenuTotal()).as("check prodRevenuTotal").isEqualTo(actual.getProdRevenuTotal()))
            .satisfies(
                e -> assertThat(e.getProdChambreNbNuitees()).as("check prodChambreNbNuitees").isEqualTo(actual.getProdChambreNbNuitees())
            )
            .satisfies(e -> assertThat(e.getDatesSejourRensYn()).as("check datesSejourRensYn").isEqualTo(actual.getDatesSejourRensYn()))
            .satisfies(e -> assertThat(e.getTechEventType()).as("check techEventType").isEqualTo(actual.getTechEventType()))
            .satisfies(e -> assertThat(e.getTechResvInvType()).as("check techResvInvType").isEqualTo(actual.getTechResvInvType()))
            .satisfies(e -> assertThat(e.getTechOrigine()).as("check techOrigine").isEqualTo(actual.getTechOrigine()))
            .satisfies(e -> assertThat(e.getTechGrpNumOrdre()).as("check techGrpNumOrdre").isEqualTo(actual.getTechGrpNumOrdre()))
            .satisfies(e -> assertThat(e.getTechCreateDate()).as("check techCreateDate").isEqualTo(actual.getTechCreateDate()))
            .satisfies(e -> assertThat(e.getTechUpdateDate()).as("check techUpdateDate").isEqualTo(actual.getTechUpdateDate()))
            .satisfies(
                e -> assertThat(e.getResvNameIdPrincipal()).as("check resvNameIdPrincipal").isEqualTo(actual.getResvNameIdPrincipal())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFtOResvUpdatableRelationshipsEquals(FtOResv expected, FtOResv actual) {}
}
